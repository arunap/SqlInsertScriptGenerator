using Microsoft.Extensions.Configuration;
using System.Text.RegularExpressions;

class Program
{
    static async Task Main(string[] args)
    {
        var config = new ConfigurationBuilder()
            .AddJsonFile("appsettings.json")
            .Build();

        var scriptFolderPath = config["ScriptFolderPath"];
        var outputFile = config["OutputFile"] ?? "combined.sql";
        var dependencyOrder = config.GetSection("TableDependencyOrder").Get<List<string>>();

        if (string.IsNullOrWhiteSpace(scriptFolderPath) || dependencyOrder == null || !dependencyOrder.Any())
        {
            Console.WriteLine("Invalid configuration. Please check 'ScriptFolderPath' and 'TableDependencyOrder'.");
            return;
        }

        var allFiles = Directory.GetFiles(scriptFolderPath, "dbo.*.Table.sql");

        using var writer = new StreamWriter(outputFile, false);
        foreach (var table in dependencyOrder)
        {
            var fileNamePattern = $"dbo.{table}.Table.sql";
            var filePath = allFiles.FirstOrDefault(f => Path.GetFileName(f).Equals(fileNamePattern, StringComparison.OrdinalIgnoreCase));
            if (filePath == null)
            {
                Console.WriteLine($"Warning: File for table '{table}' not found.");
                continue;
            }

            await writer.WriteLineAsync($"DELETE FROM [{table}];");
            var content = await File.ReadAllTextAsync(filePath);
            await writer.WriteLineAsync(content);
            await writer.WriteLineAsync();
        }

        Console.WriteLine($"Scripts combined into '{outputFile}'.");
    }
}
